syntax = "proto3";

package fooddelivery;

option php_namespace = "FoodDelivery\\Grpc\\Proto";
option php_metadata_namespace = "FoodDelivery\\Grpc\\Proto";

// Restaurant Service
service RestaurantService {
    rpc GetRestaurants(GetRestaurantsRequest) returns (GetRestaurantsResponse);
    rpc GetRestaurant(GetRestaurantRequest) returns (GetRestaurantResponse);
    rpc GetMenu(GetMenuRequest) returns (GetMenuResponse);
    rpc CreateRestaurant(CreateRestaurantRequest) returns (CreateRestaurantResponse);
    rpc UpdateRestaurant(UpdateRestaurantRequest) returns (UpdateRestaurantResponse);
    rpc DeleteRestaurant(DeleteRestaurantRequest) returns (DeleteRestaurantResponse);
}

// Order Service
service OrderService {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
    rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse);
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
    rpc TrackOrder(TrackOrderRequest) returns (TrackOrderResponse);
}

// User Service
service UserService {
    rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
    rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
    rpc GetUserOrders(GetUserOrdersRequest) returns (GetUserOrdersResponse);
    rpc GetUserAddresses(GetUserAddressesRequest) returns (GetUserAddressesResponse);
    rpc AddUserAddress(AddUserAddressRequest) returns (AddUserAddressResponse);
    rpc UpdateUserAddress(UpdateUserAddressRequest) returns (UpdateUserAddressResponse);
    rpc DeleteUserAddress(DeleteUserAddressRequest) returns (DeleteUserAddressResponse);
}

// Delivery Service
service DeliveryService {
    rpc GetDrivers(GetDriversRequest) returns (GetDriversResponse);
    rpc GetDriver(GetDriverRequest) returns (GetDriverResponse);
    rpc UpdateDriverLocation(UpdateDriverLocationRequest) returns (UpdateDriverLocationResponse);
    rpc GetDeliveryEstimates(GetDeliveryEstimatesRequest) returns (GetDeliveryEstimatesResponse);
    rpc AssignDriver(AssignDriverRequest) returns (AssignDriverResponse);
    rpc TrackDelivery(TrackDeliveryRequest) returns (TrackDeliveryResponse);
}

// Payment Service
service PaymentService {
    rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
    rpc ProcessRefund(ProcessRefundRequest) returns (ProcessRefundResponse);
    rpc GetPaymentMethods(GetPaymentMethodsRequest) returns (GetPaymentMethodsResponse);
    rpc AddPaymentMethod(AddPaymentMethodRequest) returns (AddPaymentMethodResponse);
    rpc RemovePaymentMethod(RemovePaymentMethodRequest) returns (RemovePaymentMethodResponse);
    rpc GetPaymentHistory(GetPaymentHistoryRequest) returns (GetPaymentHistoryResponse);
}

// Common Messages
message Location {
    double latitude = 1;
    double longitude = 2;
}

message Address {
    string address_line1 = 1;
    string address_line2 = 2;
    string city = 3;
    string state = 4;
    string postal_code = 5;
    string country = 6;
    Location location = 7;
}

message Restaurant {
    string id = 1;
    string uuid = 2;
    string name = 3;
    string description = 4;
    string cuisine_type = 5;
    string phone = 6;
    string email = 7;
    Address address = 8;
    Location location = 9;
    double delivery_fee = 10;
    double minimum_order = 11;
    int32 estimated_delivery_time = 12;
    double rating = 13;
    int32 review_count = 14;
    bool is_active = 15;
    bool is_featured = 16;
    string created_at = 17;
    string updated_at = 18;
}

message MenuItem {
    string id = 1;
    string uuid = 2;
    string restaurant_id = 3;
    string category_id = 4;
    string name = 5;
    string description = 6;
    double price = 7;
    string image_url = 8;
    bool is_vegetarian = 9;
    bool is_vegan = 10;
    bool is_gluten_free = 11;
    bool is_spicy = 12;
    int32 preparation_time = 13;
    bool is_available = 14;
    int32 sort_order = 15;
}

message Order {
    string id = 1;
    string uuid = 2;
    string user_id = 3;
    string restaurant_id = 4;
    string order_number = 5;
    string status = 6;
    double subtotal = 7;
    double tax_amount = 8;
    double delivery_fee = 9;
    double service_fee = 10;
    double discount_amount = 11;
    double total_amount = 12;
    string payment_status = 13;
    string payment_method = 14;
    Address delivery_address = 15;
    string special_instructions = 16;
    string estimated_delivery_time = 17;
    string actual_delivery_time = 18;
    string driver_id = 19;
    repeated OrderItem items = 20;
    string created_at = 21;
    string updated_at = 22;
}

message OrderItem {
    string id = 1;
    string menu_item_id = 2;
    int32 quantity = 3;
    double unit_price = 4;
    double total_price = 5;
    string special_instructions = 6;
}

message User {
    string id = 1;
    string uuid = 2;
    string email = 3;
    string first_name = 4;
    string last_name = 5;
    string phone = 6;
    string date_of_birth = 7;
    bool is_active = 8;
    string created_at = 9;
    string updated_at = 10;
}

message DeliveryDriver {
    string id = 1;
    string uuid = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    string phone = 6;
    string license_number = 7;
    string vehicle_type = 8;
    string vehicle_plate = 9;
    Location current_location = 10;
    bool is_available = 11;
    bool is_active = 12;
    double rating = 13;
    int32 total_deliveries = 14;
}

// Restaurant Service Messages
message GetRestaurantsRequest {
    int32 page = 1;
    int32 limit = 2;
    string cuisine_type = 3;
    Location location = 4;
    double radius = 5;
}

message GetRestaurantsResponse {
    repeated Restaurant restaurants = 1;
    int32 total_count = 2;
    int32 page = 3;
    int32 limit = 4;
}

message GetRestaurantRequest {
    string id = 1;
}

message GetRestaurantResponse {
    Restaurant restaurant = 1;
}

message GetMenuRequest {
    string restaurant_id = 1;
}

message GetMenuResponse {
    repeated MenuItem items = 1;
}

message CreateRestaurantRequest {
    string name = 1;
    string description = 2;
    string cuisine_type = 3;
    string phone = 4;
    string email = 5;
    Address address = 6;
    double delivery_fee = 7;
    double minimum_order = 8;
    int32 estimated_delivery_time = 9;
}

message CreateRestaurantResponse {
    Restaurant restaurant = 1;
}

message UpdateRestaurantRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    string cuisine_type = 4;
    string phone = 5;
    string email = 6;
    Address address = 7;
    double delivery_fee = 8;
    double minimum_order = 9;
    int32 estimated_delivery_time = 10;
    bool is_active = 11;
    bool is_featured = 12;
}

message UpdateRestaurantResponse {
    Restaurant restaurant = 1;
}

message DeleteRestaurantRequest {
    string id = 1;
}

message DeleteRestaurantResponse {
    bool success = 1;
}

// Order Service Messages
message CreateOrderRequest {
    string user_id = 1;
    string restaurant_id = 2;
    repeated OrderItem items = 3;
    Address delivery_address = 4;
    string special_instructions = 5;
    string payment_method = 6;
}

message CreateOrderResponse {
    Order order = 1;
}

message GetOrderRequest {
    string id = 1;
}

message GetOrderResponse {
    Order order = 1;
}

message GetOrdersRequest {
    string user_id = 1;
    int32 page = 2;
    int32 limit = 3;
    string status = 4;
}

message GetOrdersResponse {
    repeated Order orders = 1;
    int32 total_count = 2;
    int32 page = 3;
    int32 limit = 4;
}

message UpdateOrderStatusRequest {
    string id = 1;
    string status = 2;
}

message UpdateOrderStatusResponse {
    Order order = 1;
}

message CancelOrderRequest {
    string id = 1;
    string reason = 2;
}

message CancelOrderResponse {
    bool success = 1;
}

message TrackOrderRequest {
    string id = 1;
}

message TrackOrderResponse {
    Order order = 1;
    DeliveryDriver driver = 2;
    Location driver_location = 3;
    int32 estimated_minutes = 4;
}

// User Service Messages
message GetUserProfileRequest {
    string user_id = 1;
}

message GetUserProfileResponse {
    User user = 1;
}

message UpdateUserProfileRequest {
    string user_id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone = 4;
    string date_of_birth = 5;
}

message UpdateUserProfileResponse {
    User user = 1;
}

message GetUserOrdersRequest {
    string user_id = 1;
    int32 page = 2;
    int32 limit = 3;
}

message GetUserOrdersResponse {
    repeated Order orders = 1;
    int32 total_count = 2;
    int32 page = 3;
    int32 limit = 4;
}

message GetUserAddressesRequest {
    string user_id = 1;
}

message GetUserAddressesResponse {
    repeated Address addresses = 1;
}

message AddUserAddressRequest {
    string user_id = 1;
    string title = 2;
    Address address = 3;
    bool is_default = 4;
}

message AddUserAddressResponse {
    Address address = 1;
}

message UpdateUserAddressRequest {
    string user_id = 1;
    string address_id = 2;
    string title = 3;
    Address address = 4;
    bool is_default = 5;
}

message UpdateUserAddressResponse {
    Address address = 1;
}

message DeleteUserAddressRequest {
    string user_id = 1;
    string address_id = 2;
}

message DeleteUserAddressResponse {
    bool success = 1;
}

// Delivery Service Messages
message GetDriversRequest {
    Location location = 1;
    double radius = 2;
    bool available_only = 3;
}

message GetDriversResponse {
    repeated DeliveryDriver drivers = 1;
}

message GetDriverRequest {
    string id = 1;
}

message GetDriverResponse {
    DeliveryDriver driver = 1;
}

message UpdateDriverLocationRequest {
    string driver_id = 1;
    Location location = 2;
}

message UpdateDriverLocationResponse {
    bool success = 1;
}

message GetDeliveryEstimatesRequest {
    Location from = 1;
    Location to = 2;
    string restaurant_id = 3;
}

message GetDeliveryEstimatesResponse {
    int32 estimated_minutes = 1;
    double estimated_fee = 2;
}

message AssignDriverRequest {
    string order_id = 1;
    string driver_id = 2;
}

message AssignDriverResponse {
    bool success = 1;
    DeliveryDriver driver = 2;
}

message TrackDeliveryRequest {
    string order_id = 1;
}

message TrackDeliveryResponse {
    Order order = 1;
    DeliveryDriver driver = 2;
    Location driver_location = 3;
    int32 estimated_minutes = 4;
}

// Payment Service Messages
message ProcessPaymentRequest {
    string order_id = 1;
    string payment_method_id = 2;
    double amount = 3;
    string currency = 4;
}

message ProcessPaymentResponse {
    bool success = 1;
    string transaction_id = 2;
    string status = 3;
}

message ProcessRefundRequest {
    string order_id = 1;
    string transaction_id = 2;
    double amount = 3;
    string reason = 4;
}

message ProcessRefundResponse {
    bool success = 1;
    string refund_id = 2;
    string status = 3;
}

message GetPaymentMethodsRequest {
    string user_id = 1;
}

message GetPaymentMethodsResponse {
    repeated PaymentMethod methods = 1;
}

message PaymentMethod {
    string id = 1;
    string type = 2;
    string provider = 3;
    string last_four_digits = 4;
    int32 expiry_month = 5;
    int32 expiry_year = 6;
    bool is_default = 7;
    bool is_active = 8;
}

message AddPaymentMethodRequest {
    string user_id = 1;
    string type = 2;
    string provider = 3;
    string token = 4;
    bool is_default = 5;
}

message AddPaymentMethodResponse {
    PaymentMethod method = 1;
}

message RemovePaymentMethodRequest {
    string user_id = 1;
    string method_id = 2;
}

message RemovePaymentMethodResponse {
    bool success = 1;
}

message GetPaymentHistoryRequest {
    string user_id = 1;
    int32 page = 2;
    int32 limit = 3;
}

message GetPaymentHistoryResponse {
    repeated PaymentTransaction transactions = 1;
    int32 total_count = 2;
    int32 page = 3;
    int32 limit = 4;
}

message PaymentTransaction {
    string id = 1;
    string order_id = 2;
    string transaction_id = 3;
    double amount = 4;
    string currency = 5;
    string status = 6;
    string payment_method = 7;
    string created_at = 8;
}
